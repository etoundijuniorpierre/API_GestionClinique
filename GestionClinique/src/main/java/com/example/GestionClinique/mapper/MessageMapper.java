package com.example.GestionClinique.mapper;


import com.example.GestionClinique.dto.RequestDto.MessageRequestDto;
import com.example.GestionClinique.dto.ResponseDto.MessageResponseDto;
import com.example.GestionClinique.model.entity.Message;
import org.mapstruct.Mapper;
import org.mapstruct.NullValuePropertyMappingStrategy;
import org.mapstruct.MappingTarget;
import org.mapstruct.Mapping;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.List;


@Mapper(componentModel = "spring",
        nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE,
        uses = {UtilisateurMapper.class}) // Declare UtilisateurMapper for nested mapping
public abstract class MessageMapper {

    @Autowired
    protected UtilisateurMapper utilisateurMapper; // Inject UtilisateurMapper

    // Mapping from Request DTO to Entity for creation/update
    @Mapping(target = "id", ignore = true) // ID is generated by DB
    @Mapping(target = "expediteur", ignore = true) // Set by service based on expediteurId
    @Mapping(target = "destinataire", ignore = true) // Set by service based on destinataireId
    @Mapping(target = "creationDate", ignore = true) // Handled by BaseEntity or service
    @Mapping(target = "lastModifiedDate", ignore = true) // Handled by BaseEntity or service
    public abstract Message toEntity(MessageRequestDto dto);

    // Mapping from Entity to Response DTO
    @Mapping(target = "expediteur", expression = "java(utilisateurMapper.toDto(entity.getExpediteur()))")
    @Mapping(target = "destinataire", expression = "java(utilisateurMapper.toDto(entity.getDestinataire()))")
    public abstract MessageResponseDto toDto(Message entity);

    public abstract List<MessageResponseDto> toDtoList(List<Message> entities);

    // Update existing entity from DTO
    @Mapping(target = "id", ignore = true) // Never update ID
    @Mapping(target = "expediteur", ignore = true) // Relationships typically not updated directly via main DTO
    @Mapping(target = "destinataire", ignore = true) // Relationships typically not updated directly via main DTO
    @Mapping(target = "creationDate", ignore = true) // Handled by BaseEntity
    @Mapping(target = "lastModifiedDate", ignore = true) // Handled by BaseEntity
    public abstract void updateEntityFromDto(MessageRequestDto dto, @MappingTarget Message entity);
}
